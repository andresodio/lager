#ifndef LAGER_COMMON_COORDINATES_LETTER_H
#define LAGER_COMMON_COORDINATES_LETTER_H

#include "spherical_coordinates.h"
#include <unordered_map>

std::unordered_map<struct SphericalCoordinates, char> coordinates_letter =
	// Format: {{<THETA>, <PHI>}, '<LETTER>'}
	// A is the top face (pole), Z is the bottom face (pole)
	// They repeat on each plane

  {{{0, 0},   'a'}, {{0, 45},  'a'}, {{0, 90},  'a'},
   {{0, 135}, 'a'}, {{0, 180}, 'a'}, {{0, 225}, 'a'},
   {{0, 270}, 'a'}, {{0, 315}, 'a'}, {{0, 360}, 'a'},

   {{45, 0},   'b'}, {{45, 45},  'c'}, {{45, 90},  'd'},
   {{45, 135}, 'e'}, {{45, 180}, 'f'}, {{45, 225}, 'g'},
   {{45, 270}, 'h'}, {{45, 315}, 'i'}, {{45, 360}, 'b'},

   {{90, 0},   'j'}, {{90, 45},  'k'}, {{90, 90},  'l'},
   {{90, 135}, 'm'}, {{90, 180}, 'n'}, {{90, 225}, 'o'},
   {{90, 270}, 'p'}, {{90, 315}, 'q'}, {{90, 360}, 'j'},

   {{135, 0},   'r'}, {{135, 45},  's'}, {{135, 90},  't'},
   {{135, 135}, 'u'}, {{135, 180}, 'v'}, {{135, 225}, 'w'},
   {{135, 270}, 'x'}, {{135, 315}, 'y'}, {{135, 360}, 'r'},

   {{180, 0},   'z'}, {{180, 45},  'z'}, {{180, 90},  'z'},
   {{180, 135}, 'z'}, {{180, 180}, 'z'}, {{180, 225}, 'z'},
   {{180, 270}, 'z'}, {{180, 315}, 'z'}, {{180, 360}, 'z'},

   {{225, 0},   'v'}, {{225, 45},  'w'}, {{225, 90},  'x'},
   {{225, 135}, 'y'}, {{225, 180}, 'r'}, {{225, 225}, 's'},
   {{225, 270}, 't'}, {{225, 315}, 'u'}, {{225, 360}, 'v'},

   {{270, 0},   'n'}, {{270, 45},  'o'}, {{270, 90},  'p'},
   {{270, 135}, 'q'}, {{270, 180}, 'r'}, {{270, 225}, 's'},
   {{270, 270}, 't'}, {{270, 315}, 'u'}, {{270, 360}, 'n'},

   {{315, 0},   'f'}, {{315, 45},  'g'}, {{315, 90},  'h'},
   {{315, 135}, 'i'}, {{315, 180}, 'j'}, {{315, 225}, 'k'},
   {{315, 270}, 'l'}, {{315, 315}, 'm'}, {{315, 360}, 'f'},

   {{360, 0},   'a'}, {{360, 45},  'a'}, {{360, 90},  'a'},
   {{360, 135}, 'a'}, {{360, 180}, 'a'}, {{360, 225}, 'a'},
   {{360, 270}, 'a'}, {{360, 315}, 'a'}, {{360, 360}, 'a'}};

#endif /* LAGER_COMMON_COORDINATES_LETTER_H */
