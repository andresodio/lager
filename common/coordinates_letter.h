#ifndef LAGER_COMMON_COORDINATES_LETTER_H
#define LAGER_COMMON_COORDINATES_LETTER_H

#include "spherical_coordinates.h"
#include <unordered_map>

std::unordered_map<struct SphericalCoordinates, char> coordinates_letter =
	// Format: {{<PHI>,<THETA>}, '<LETTER>'}
	// A is the top face (pole), Z is the bottom face (pole)
	// They repeat on each plane

  {{{0,   0}, 'a'}, {{45,  0}, 'a'}, {{90,  0}, 'a'},
   {{135, 0}, 'a'}, {{180, 0}, 'a'}, {{225, 0}, 'a'},
   {{270, 0}, 'a'}, {{315, 0}, 'a'}, {{360, 0}, 'a'},

   {{0,   45}, 'b'}, {{45,  45}, 'c'}, {{90,  45}, 'd'},
   {{135, 45}, 'e'}, {{180, 45}, 'f'}, {{225, 45}, 'g'},
   {{270, 45}, 'h'}, {{315, 45}, 'i'}, {{360, 45}, 'b'},

   {{0,   90}, 'j'}, {{45,  90}, 'k'}, {{90,  90}, 'l'},
   {{135, 90}, 'm'}, {{180, 90}, 'n'}, {{225, 90}, 'o'},
   {{270, 90}, 'p'}, {{315, 90}, 'q'}, {{360, 90}, 'j'},

   {{0,   135}, 'r'}, {{45,  135}, 's'}, {{90,  135}, 't'},
   {{135, 135}, 'u'}, {{180, 135}, 'v'}, {{225, 135}, 'w'},
   {{270, 135}, 'x'}, {{315, 135}, 'y'}, {{360, 135}, 'r'},

   {{0,   180}, 'z'}, {{45,  180}, 'z'}, {{90,  180}, 'z'},
   {{135, 180}, 'z'}, {{180, 180}, 'z'}, {{225, 180}, 'z'},
   {{270, 180}, 'z'}, {{315, 180}, 'z'}, {{360, 180}, 'z'},

   {{0,   225}, 'v'}, {{45,  225}, 'w'}, {{90,  225}, 'x'},
   {{135, 225}, 'y'}, {{180, 225}, 'r'}, {{225, 225}, 's'},
   {{270, 225}, 't'}, {{315, 225}, 'u'}, {{360, 225}, 'v'},

   {{0,   270}, 'n'}, {{45,  270}, 'o'}, {{90,  270}, 'p'},
   {{135, 270}, 'q'}, {{180, 270}, 'r'}, {{225, 270}, 's'},
   {{270, 270}, 't'}, {{315, 270}, 'u'}, {{360, 270}, 'n'},

   {{0,   315}, 'f'}, {{45,  315}, 'g'}, {{90,  315}, 'h'},
   {{135, 315}, 'i'}, {{180, 315}, 'j'}, {{225, 315}, 'k'},
   {{270, 315}, 'l'}, {{315, 315}, 'm'}, {{360, 315}, 'f'},

   {{0,   360}, 'a'}, {{45,  360}, 'a'}, {{90,  360}, 'a'},
   {{135, 360}, 'a'}, {{180, 360}, 'a'}, {{225, 360}, 'a'},
   {{270, 360}, 'a'}, {{360, 360}, 'a'}, {{360, 360}, 'a'}};

#endif /* LAGER_COMMON_COORDINATES_LETTER_H */
