/**
 * Dependencies that need to be installed for lager to compile and run on
 * an Ubuntu 18.04 machine.
 */

-----------------
 Ubuntu Packages
-----------------

Install the missing packages:
~$ sudo apt-get install cmake doxygen git graphviz libboost-serialization-dev libboost-system-dev libboost-thread-dev libglew-dev libusb-1.0-0-dev libxrandr-dev libxt-dev libxtst-dev

Make sure to accept all extra packages suggested by apt-get.

-----------------
      OSVR
-----------------

Clone the OSVR-Core repository:
~$ git clone https://github.com/OSVR/OSVR-Core.git

Install OSVR-Core by following the instructions at:
https://github.com/OSVR/OSVR-Docs/blob/master/Getting-Started/Installing/Linux-Build-Instructions.md

If the compilation segfaults with GCC, try it with clang:
~/OSVR-Core/build$ CXX=/usr/bin/clang++ CC=/usr/bin/clang cmake ..
~/OSVR-Core/build$ CXX=/usr/bin/clang++ CC=/usr/bin/clang make

Finally, install OSVR:
~/OSVR-Core/build$ sudo make install

-----------------
   Razer Hydra
-----------------

The Razer Hydra is supported out of the box by OSVR.

Simply start the OSVR server:
~$ sudo osvr_server

-----------------
   Leap Motion
-----------------

Download the Leap Motion v2 SDK:
https://leapmotion.app.box.com/s/rlwzvt680i5r6zes75ge36ub2yt7ksx3

Extract it:
~$ tar xvzf LeapDeveloperKit_linux-hotfix_2.3.1+33747_linux.tgz

Move the LeapSDK to your home directory:
~$ mv LeapDeveloperKit_2.3.1+33747_linux/LeapSDK/ .

Copy the Leap library to your system:
~$ sudo cp LeapSDK/lib/x64/libLeap.so /usr/local/lib/

Clone the OSVR-Leap-Motion repository:
~$ git clone https://github.com/OSVR/OSVR-Leap-Motion.git

Checkout the following commit, which is the latest one that supports the Leap
Motion v2 SDK:
~$ cd OSVR-Leap-Motion
~/OSVR-Leap-Motion$ git checkout aa89b29454a6e717ff9860a29b7791518a690d3d

Cherry-pick the following commit, which adds retries to make sure the Leap
Motion controller is connected:
~$ cd OSVR-Leap-Motion
~/OSVR-Leap-Motion$ git cherry-pick 3810b93d908a943bb934fe739171f9f4e21e575c

Apply the following patch to fix a compilation error:
--- a/Tracker.cpp
+++ b/Tracker.cpp
@@ -15,7 +15,7 @@ Tracker::Tracker(const osvr::pluginkit::DeviceToken& pDeviceToken,
                                                                                                mTrackerInterface(NULL) {
     // note we have two skeleton sensors, one for each hand, each with their own spec
     // this is because the articulation specs for each hand are not connected by a parent joint
-    osvrDeviceSkeletonConfigure(pOptions, &mSkeletonInterface, com_osvr_LeapMotion_json, 2);
+    osvrDeviceSkeletonConfigure(pOptions, &mSkeletonInterface, com_osvr_LeapMotion_json);
 
        osvrDeviceTrackerConfigure(pOptions, &mTrackerInterface);

Compile and Install OSVR-Leap-Motion:
~/OSVR-Leap-Motion$ mkdir build
~/OSVR-Leap-Motion$ cd build
~/OSVR-Leap-Motion/build$ cmake -DLEAPMOTION_LEAP_LIBRARY_RELEASE=~/LeapSDK/lib/x64/libLeap.so -DLEAPMOTION_ROOT_DIR=~/ ..
~/OSVR-Leap-Motion/build$ make
~/OSVR-Leap-Motion/build$ sudo make install

Start the Leap Motion daemon:
~$ sudo service leapd start

Start the OSVR server:
~$ sudo osvr_server

-------------------------
   Xbox 360 Controller
-------------------------

Install the Xbox 360 controller Linux driver:
~$ sudo apt install xboxdrv

Clone the VRPN repo:
~$ git clone https://github.com/vrpn/vrpn.git

Install VRPN:
~$ cd vrpn
~/vrpn$ mkdir build && cd build && cmake .. && make && sudo make install

Uncomment the following joystick support within the VRPN config file (/usr/local/etc/vrpn.cfg):
vrpn_Joylin	Joylin0	/dev/input/js0

Add the following lines to the VRPN config file (/usr/local/etc/vrpn.cfg) to create trackers for the controller's joysticks:
vrpn_Tracker_AnalogFly	Tracker0	60.0	absolute
X	*Joylin0	0	0.0	0.0	1.0	1.0
Y	*Joylin0	1	0.0	0.0	-1.0	1.0
#Z	*Joystick0	6	0.0	0.0	1.0	1.0
#RX	NULL		3	0.0	0.0	1.0	1.0
#RY	NULL		4	0.0	0.0	1.0	1.0
#RZ	*Joystick0	5	0.0	0.0	0.5	1.0
#RESET	NULL	0
#CLUTCH	NULL 0

vrpn_Tracker_AnalogFly	Tracker1	60.0	absolute
X	*Joylin0	2	0.0	0.0	1.0	1.0
Y	*Joylin0	3	0.0	0.0	-1.0	1.0
#Z	*Joystick0	6	0.0	0.0	1.0	1.0
#RX	NULL		3	0.0	0.0	1.0	1.0
#RY	NULL		4	0.0	0.0	1.0	1.0
#RZ	*Joystick0	5	0.0	0.0	0.5	1.0
#RESET	NULL	0
#CLUTCH	NULL 0

Create /usr/local/share/osvrcore/external-devices/device-descriptors/Xbox_Controller360TrackerRight.json with the following contents:
{
  "interfaces": {
    "tracker": {
      "count": 1
    }
  },
  "automaticAliases": {
    "/me/hands/left": "tracker/0"
  }
}

Create /usr/local/share/osvrcore/external-devices/device-descriptors/Xbox_Controller360TrackerRight.json with the following contents:
{
  "interfaces": {
    "tracker": {
      "count": 1
    }
  },
  "automaticAliases": {
    "/me/hands/right": "tracker/0"
  }
}

Replace the automatic aliases at the end of /usr/local/share/osvrcore/external-devices/device-descriptors/Xbox_Controller360.json by the following:
  "automaticAliases": {
    "/controller/left/1": "semantic/left/bumper",
    "/controller/right/1": "semantic/right/bumper"
  }

Add the following configuration to your OSVR config file (/usr/local/share/osvrcore/osvr_server_config.json):
	"externalDevices": {
		"/Xbox_360LinuxDeviceLeftTracker": {
		"deviceName": "Tracker0",
		"server": "localhost:3884",
		"descriptor": "/usr/local/share/osvrcore/external-devices/device-descriptors/Xbox_Controller360TrackerLeft.json"
		},
		"/Xbox_360LinuxDeviceRightTracker": {
		"deviceName": "Tracker1",
		"server": "localhost:3884",
		"descriptor": "/usr/local/share/osvrcore/external-devices/device-descriptors/Xbox_Controller360TrackerRight.json"
		},
		"/Xbox_360LinuxDevice": {
		"deviceName": "Joylin0",
		"server": "localhost:3884",
		"descriptor": "/usr/local/share/osvrcore/external-devices/device-descriptors/Xbox_Controller360.json"
		}
	},

Start the Xbox 360 controller driver:
~$ sudo xboxdrv --detach-kernel-driver --daemon

Start the VRPN server on port 3884 so it doesn't clash with the OSVR server's default port:
~$ sudo vrpn_server -f /usr/local/etc/vrpn.cfg 3884

Start the OSVR server:
~$ sudo osvr_server /usr/local/share/osvrcore/osvr_server_config.json

------------
   Mouse
------------

Look for the name of your mouse device in the Linux input system:
~$ cat /proc/bus/input/devices | grep Name | grep -i mouse

Use that name to add a mouse device to the VRPN configuration (/usr/local/etc/vrpn.cfg). For example:
vrpn_DevInput           Mouse0          "Logitech G700s Rechargeable Gaming Mouse" relative -1

Add a virtual tracker to the VRPN configuration (/usr/local/etc/vrpn.cfg) that uses the mouse device:
vrpn_Tracker_AnalogFly Tracker0 60.0 absolute
X  *Mouse0 0 0.5 0.0 2.0 1.0
Y  *Mouse0 1 0.5 0.0 2.0 1.0
Z  NULL 2 0.0 0.0 1.0 1.0
RX NULL 3 0.0 0.0 1.0 1.0
RY NULL 4 0.0 0.0 1.0 1.0
RZ NULL 5 0.0 0.0 1.0 1.0
RESET NULL 0
CLUTCH NULL 0

Start the VRPN server on port 3884 so it doesn't clash with the OSVR server's default port:
~$ sudo vrpn_server -f /usr/local/etc/vrpn.cfg 3884

Add mouse tracker and mouse button devices to the OSVR configuration (/usr/local/share/osvrcore/osvr_server_config.json):
	"externalDevices": {
		"/MouseTracker": {
			"deviceName": "Tracker0",
			"server": "localhost:3884",
			"descriptor": {
				"interfaces": {
		    	    "tracker": {
						"count": 1
					}
				},
				"automaticAliases": {
					"/me/hands/left": "/MouseTracker/tracker/0"
				}
			}
		},
		"/MouseButtons": {
			"deviceName": "Mouse0",
			"server": "localhost:3884",
			"descriptor": {
				"interfaces": {
		    	    "button": {
						"count": 7
					}
				},
				"automaticAliases": {
					"/controller/left/1": "/MouseButtons/button/4"
				}
			}
		}
	}

In the example above, we used mouse button 4, but you can use any button on your mouse.

Start the OSVR server:
~$ sudo osvr_server /usr/local/share/osvrcore/osvr_server_config.json

------------
   Wacom
------------

Look for the name of your Wacom pen device in the Linux input system:
~$ cat /proc/bus/input/devices | grep Name | grep Wacom

Use that name to add a Wacom pen device to the VRPN configuration (/usr/local/etc/vrpn.cfg). For example:
vrpn_DevInput           Wacom0          "Wacom Intuos PT S Pen" absolute 1920

Add a virtual tracker to the VRPN configuration (/usr/local/etc/vrpn.cfg) that uses the Wacom device:
vrpn_Tracker_AnalogFly Tracker0 60.0 absolute
X  *Wacom0 0 0.5 0.0 1.0 1.0
Y  *Wacom0 1 0.5 0.0 -1.0 1.0
Z  NULL 2 0.0 0.0 1.0 1.0
RX NULL 3 0.0 0.0 1.0 1.0
RY NULL 4 0.0 0.0 1.0 1.0
RZ NULL 5 0.0 0.0 1.0 1.0
RESET NULL 0
CLUTCH NULL 0

Start the VRPN server on port 3884 so it doesn't clash with the OSVR server's default port:
~$ sudo vrpn_server -f /usr/local/etc/vrpn.cfg 3884

Add Wacom tracker and Wacom button devices to the OSVR configuration (/usr/local/share/osvrcore/osvr_server_config.json):
	"externalDevices": {
		"/WacomTracker": {
			"deviceName": "Tracker0",
			"server": "localhost:3884",
			"descriptor": {
				"interfaces": {
					"tracker": {
						"count": 1
					}
				},
				"automaticAliases": {
					"/me/hands/right": "/WacomTracker/tracker/0"
				}
			}
		},
		"/WacomButtons": {
			"deviceName": "Wacom0",
			"server": "localhost:3884",
			"descriptor": {
				"interfaces": {
					"button": {
						"count": 80
					}
				},
				"automaticAliases": {
					"/controller/right/1": "/WacomButtons/button/59"
				}
			}
		}
	}

In the example above, we used Wacom button 59, which corresponds to our Wacom pen's main button, but you can use any button on your device.

Start the OSVR server:
~$ sudo osvr_server /usr/local/share/osvrcore/osvr_server_config.json
